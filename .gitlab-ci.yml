stages:
    - build
    - test

services:
    - docker:dind

build:
    image: docker:latest
    stage: build
    before_script:
        - PROJECT_API_URL=$CI_API_V4_URL/projects/$CI_PROJECT_ID
        - export BASE_NAME=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
        - export IMAGE_NAME=${BASE_NAME}:${CI_COMMIT_TAG}
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - docker build --progress plain --pull -t "${IMAGE_NAME}" .
        - |
            if [ ! $CI_PIPELINE_SOURCE == "web" ]; then
                echo Update 'latest' tag
                docker tag "${IMAGE_NAME}" "${BASE_NAME}:latest"
            fi
        - docker image push --all-tags "${BASE_NAME}"
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_TAG'
        -   if: $CI_COMMIT_TAG

include:
    -   template: Jobs/Container-Scanning.gitlab-ci.yml

container_scanning:
    rules:
        -   if: '$CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_TAG'
        -   if: $CI_COMMIT_TAG
    variables:
        CS_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
